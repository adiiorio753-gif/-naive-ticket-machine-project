Project: naive-ticket-machine
Authors: David Barnes and Michael Kölling

This project is part of the material for the book

   Objects First with Java - A Practical Introduction using BlueJ
   Seventh edition
   David J. Barnes and Michael Kölling
   Pearson Education

It is discussed in chapter 2.

Purpose of project: To illustrate the basics of fields, constructors, and methods.
How to start this project: Create one or more TicketMachine objects.

2.After a picket is perchased the value in 0
3.No matter the amout of money inserted in the machine the ticket will go throght.
7.After changing it to class public it no longer works and the tickct machine is blocked off.
8.If you remove public from the outer wrapper it will still work
9. If you remove class and are left with public it will stop working
11. The Nmae and the no Return Type
12. count the type is int/represtative the ype is Sudent/bost the typ eis Server
13. alive,tutor,game
14. Class name s are Student, Server, Person,Game
15. yes it matters order private int price it placed if you move the words around it won't work.
16. yes without the semicolon it will not work.
18. student is the class
19. There are two title of the type String and price of the type double
20. Yes the parameters will need to be stored, the book class fields is String title and double price, we canot know for sure what the field names are just from the constructor
21. This.name = petsName;
22. public Date(String month,int day, int year)
23. The header (the methhod names are different) The body (the return field is different)
24. "what is the current balance?"
25. no the return statement inside the methhod does not change
27. The error is that its no longer a statement.
28. The main difference is their return type
29. both methods have a return type of void, so thye do not have a return statement that return a value.
31. /**
 * Increase score by the given number of points.
 */
 public void increaseScore(int points)
 {
  score = score + points;
  // or simply: score+= points;
 }
33.  /**
 * Reduce price by the given amount.
 */
 public void discount(int amount)
 {
    price-=amount;
    }
 // TODO: Subtract amount from price
34. public void setAge(int currentAge)
{
    age = currentAge;
}
37. identifer expected and illigal start of type.
39. The word "price" is now a string literal, not a variable . so it will print;
